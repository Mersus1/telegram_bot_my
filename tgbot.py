import telebot
from telebot import types
import requests
import sqlite3

            # –†–∞–∑–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        if time == now:
                bot.send_message(user_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}")
                cursor.execute("DELETE FROM reminders WHERE id = ?", (rem_id,))
                conn.commit()

            # –ö–∞–∂–¥—ã–π —á–∞—Å (–Ω–∞ 0-–π –º–∏–Ω—É—Ç–µ)
        elif repeat == 1 and datetime.now().minute == 0:
                bot.send_message(user_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ (–∫–∞–∂–¥—ã–π —á–∞—Å): {text}")

            # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å (–≤ 09:00)
        elif repeat == 2 and datetime.now().hour == 9 and datetime.now().minute == 0:
                bot.send_message(user_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å): {text}")

        text = message.text.lower().replace("–Ω–∞–ø–æ–º–Ω–∏", "").strip()
        # –†–∞–∑–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–≤ 18:30")
        if "–≤ " in text:
            parts = text.split(" –≤ ")
            reminder_text = parts[0].strip()
            reminder_time = parts[1].strip()
            add_reminder(message.chat.id, reminder_text, reminder_time, 0)
            bot.send_message(message.chat.id, f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: \"{reminder_text}\" –≤ {reminder_time}")

        # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å
        elif "–∫–∞–∂–¥—ã–π —á–∞—Å" in text:
            add_reminder(message.chat.id, text.replace("–∫–∞–∂–¥—ã–π —á–∞—Å", "").strip(), "00:00", 1)
            bot.send_message(message.chat.id, f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å **–∫–∞–∂–¥—ã–π —á–∞—Å**!")

        # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
        elif "–∫–∞–∂–¥—ã–π –¥–µ–Ω—å" in text:
            add_reminder(message.chat.id, text.replace("–∫–∞–∂–¥—ã–π –¥–µ–Ω—å", "").strip(), "00:00", 2)
            bot.send_message(message.chat.id, f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å **–∫–∞–∂–¥—ã–π –¥–µ–Ω—å**!")

        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: –ù–∞–ø–æ–º–Ω–∏ [—Ç–µ–∫—Å—Ç] –≤ [–≤—Ä–µ–º—è]. –ù–∞–ø—Ä–∏–º–µ—Ä: '–ù–∞–ø–æ–º–Ω–∏ –∫—É–ø–∏—Ç—å —Ö–ª–µ–± –≤ 15:00'.")

    except IndexError:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: –ù–∞–ø–æ–º–Ω–∏ [—Ç–µ–∫—Å—Ç] –≤ [–≤—Ä–µ–º—è] –∏–ª–∏ '–∫–∞–∂–¥—ã–π —á–∞—Å'.")

@bot.message_handler(commands=["–æ—Ç–º–µ–Ω–∏—Ç—å"])
def cancel_reminder(message):
    delete_reminder(message.chat.id)
    bot.send_message(message.chat.id, "‚ùå –í—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã!")

@bot.message_handler(content_types=["text"])
def send_weather(message):
    if message.text.strip().isalpha():
        user_cities[message.chat.id] = message.text
        bot.send_message(message.chat.id, get_weather(message.text))
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –±—É–∫–≤–∞–º–∏.")

@bot.message_handler(content_types=["photo"])
def get_photo(message):
    bot.reply_to(message, "–ß—Ç–æ –∑–∞ –¥–µ—Ä—å–º–æ? üòÇ")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)

